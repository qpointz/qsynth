experiments:
  write_csv:
    type : csv
    path : "../.test-data/csv/{model-name}/{dataset-name}.csv"
    params:
      sep : ";"
      header : true
      index: false
  write_parquet:
    type: parquet
    path: "../.test-data/parquet/{model-name}/{dataset-name}.parquet"
  write_sql:
    type: sql
    path: "../.test-data/parquet/{model-name}/{dataset-name}.sql"
  write_model:
    type: ermodel
    path: "../.test-data/{model-name}.puml"
  write_model_mermaid:
    type: mermaid
    path: "../.test-data/{model-name}.mmd"
  write_model_prompt:
    type: llm-prompt
    path: "../.test-data/{model-name}.prompt"
    params:
      prologue: You are SQL bot
      rules:
        - Generate **valid SQL query**
        - quote sql identifiers with `
        - Use **JOIN**, if requiered
        - Determine desired output type
        - "table: if result should be displayed as table"
        - "text: if result should be displayed as text"
        - "chart: if result should be displayed as chart. if chart selected as output determine chart type (bar, scatter, pie etc.)"
        - |
            Reply in JSON format example:
            {
              "query": "sql query your generated",
              "output_type": "desired output type",
              "chart_type": "if output type is chart"
            }
      epilogue: |      
        I am your fun

  cron_feed:
    type: cron_feed
    cron: 0 18 * * MON-FRI
    dates:
      from : '2023-01-01'
      to : '2023-05-01'
      count : 30
    path: "../.test-data/feed/{dataset-name}-daily-{cron-date:%Y-%m-%d}.csv"
    writer:
      name : csv
      params:
        sep: ";"
        header: true
        index: false
models:
  - name: testmodel
    locales: ['en-US']
    schemas:
      - name: dataset1
        rows: 100
        description: primary dataset
        attributes:
          - name : id
            type : random_int
            description: id unique identifier
            params:
              min: 100000
              max: 200000
          - name : zipcode
            type : zipcode
            description: location zipcode
          - name : full_name
            type : name
          - name : ssn1
            type : ssn
          - name : job1
            type : job
      - name : dataset2
        rows :
          min : 10
          max : 1000
        attributes:
          - name : id
            type : random_int
          - name : ds1
            type : ${ref}
            params:
              dataset: dataset1
              attribute: id
              cord: "1-*"